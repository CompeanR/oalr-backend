# Production Docker Compose
# Run with: docker-compose -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: oalr-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-oalr_production}
      POSTGRES_USER: ${DB_USERNAME:-oalr_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-oalr_user} -d ${DB_NAME:-oalr_production}"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Security: limit resources
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # NestJS Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: oalr-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-oalr_user}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-oalr_production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    # Security: limit resources
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Health check for load balancer
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres